@using Portal.Business.Utilities
@using Portal.Domain.ViewModels
@model PaginatedList<ViewModelInternalUser>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout_Admin.cshtml";
}

<div class="row">
    <div class="col-md-12 ">
        <div class="element-box element-wrapper">

            <div class="form-desc">
                Manage users on the portal
                <a asp-action="Add" class="btn btn-sm btn-primary float-left"> <i class="os-icon os-icon-plus-circle"></i> Add Users</a>
            </div>
            <div class="element-box-tp">
                <form asp-action="Index" method="get">
                    <div class="form-actions no-color">
                        <p>
                            Find by name: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
                            <input type="submit" value="Search" class="btn btn-default" /> |
                            <a asp-action="Index">Back to Full List</a>
                        </p>
                    </div>
                </form>
                <div class="table-responsive">
                    <table class="table table-striped b-b">
                        <thead>
                            <tr>

                                <th>
                                    Name
                                </th>
                                <th>
                                    Email
                                </th>
                                <th>
                                    Role
                                </th>

                                <th>
                                    ACTIVE
                                </th>
                                <th>
                                    LastLogin
                                </th>
                                <th class="text-center">
                                    Actions
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {

                                <tr>

                                    <td>
                                        <div class="user-with-avatar">
                                            <img alt="" src="~/custom/img/default-profile.svg"><span>@item.Name</span>
                                        </div>
                                    </td>

                                    <td>
                                        @item.Email
                                    </td>
                                    <td>
                                        @item.Role
                                    </td>
                                    <td>
                                        @item.IsActive
                                    </td>
                                    <td>
                                        @item.LastLogin
                                    </td>

                                    <td class="row-actions">
                                        <a href="#" title="View"><i class="os-icon os-icon-eye"></i></a>
                                        <a href="#" title="Edit"><i class="os-icon os-icon-edit"></i></a>
                                        <a href="#" title="Suspend"><i class="os-icon os-icon-x-square"></i></a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <div class="controls-below-table">
                        <div class="table-records-info">
                            Showing records @Model.PageIndex - @Model.TotalPages
                        </div>
                        <div class="table-records-pages">
                            @{
                                var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                                var nextDisabled = !Model.HasNextPage ? "disabled" : "";
                            }

                            <a asp-action="Index"
                               asp-route-sortOrder="@ViewData["CurrentSort"]"
                               asp-route-page="@(Model.PageIndex - 1)"
                               asp-route-currentFilter="@ViewData["CurrentFilter"]"
                               class="btn btn-lg btn-primary @prevDisabled">
                                Previous
                            </a>
                            <a asp-action="Index"
                               asp-route-sortOrder="@ViewData["CurrentSort"]"
                               asp-route-page="@(Model.PageIndex + 1)"
                               asp-route-currentFilter="@ViewData["CurrentFilter"]"
                               class="btn btn-lg btn-primary @nextDisabled">
                                Next
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>